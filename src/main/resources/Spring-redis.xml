<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
       default-lazy-init="false">

    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${redis.maxActive}"/>
        <!-- 最大等待时间 -->
        <property name="maxWaitMillis" value="${redis.maxWait}"/>

        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>
    <bean id="jedisConnectionFactory" class="redis.clients.jedis.JedisPool">
    <constructor-arg index="0" ref="jedisPoolConfig"/>
    <!-- 端口，默认6379 -->
    <constructor-arg index="2" value="${redis.port}" name="port" type="int"/>
    <constructor-arg index="3" value="5000" name="timeout" type="int"/>
    <constructor-arg index="1" value="${redis.host}" name="host" type="java.lang.String"/>
    <constructor-arg index="4" value="${redis.password}" name="password" type="java.lang.String"/>
</bean>

<!--    &lt;!&ndash;    &lt;!&ndash; 序列化配置 &ndash;&gt;&ndash;&gt;-->
<!--        <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--        <bean id="jdkSerializerRedis" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->

<!--        &lt;!&ndash;redis操作模版,使用该对象可以操作redis  &ndash;&gt;-->
<!--        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >-->
<!--            <property name="connectionFactory" ref="jedisConnectionFactory" />-->
<!--            &lt;!&ndash;如果不配置Serializer，那么存储的时候缺省使用String，如果用User类型存储，那么会提示错误User can't cast to String！！  &ndash;&gt;-->
<!--            <property name="keySerializer" >-->
<!--                <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
<!--            </property>-->
<!--            <property name="valueSerializer" >-->
<!--                <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
<!--            </property>-->
<!--&lt;!&ndash;            <property name="hashKeySerializer">&ndash;&gt;-->
<!--&lt;!&ndash;                <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>&ndash;&gt;-->
<!--&lt;!&ndash;            </property>&ndash;&gt;-->
<!--&lt;!&ndash;            <property name="hashValueSerializer">&ndash;&gt;-->
<!--&lt;!&ndash;                <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>&ndash;&gt;-->
<!--&lt;!&ndash;            </property>&ndash;&gt;-->
<!--&lt;!&ndash;            &lt;!&ndash;开启事务  &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;            <property name="enableTransactionSupport" value="true"></property>&ndash;&gt;-->
<!--        </bean >-->


    <!--    &lt;!&ndash; spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value &ndash;&gt;-->
    <!--    &lt;!&ndash; 配置RedisCacheManager &ndash;&gt;-->
    <!--    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">-->
    <!--        <constructor-arg name="redisOperations" ref="redisTemplate" />-->
    <!--        <property name="defaultExpiration" value="${redis.expiration}" />-->
    <!--    </bean>-->

    <!--    &lt;!&ndash; 配置RedisCacheConfig &ndash;&gt;-->
    <!--    <bean id="redisCacheConfig" class="com.TeachingAssistanceSystem.util.RedisCacheConfig">-->
    <!--        <constructor-arg ref="jedisConnectionFactory"/>-->
    <!--        <constructor-arg ref="redisTemplate"/>-->
    <!--        <constructor-arg ref="redisCacheManager"/>-->
    <!--    </bean>-->

    <!--    &lt;!&ndash; 自定义key生成器 &ndash;&gt;-->
    <!--    <bean id="keyGenerator" class="com.TeachingAssistanceSystem.util.keyGenerator"></bean>-->

    <!--&lt;!&ndash;    &lt;!&ndash; 下面这个是整合Mybatis的二级缓存使用的 &ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;    <bean id="redisCacheTransfer" class="cn.qlq.jedis.RedisCacheTransfer">&ndash;&gt;-->
    <!--&lt;!&ndash;        <property name="jedisConnectionFactory" ref="jedisConnectionFactory" />&ndash;&gt;-->
    <!--&lt;!&ndash;    </bean>&ndash;&gt;-->

</beans>