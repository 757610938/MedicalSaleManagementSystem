<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.medicalSaleManagementSystem.core.dao.StockMapper">
  <resultMap id="BaseResultMap" type="com.medicalSaleManagementSystem.core.model.entity.Stock">
    <id column="stock_id" jdbcType="INTEGER" property="stockId" />
    <result column="medicine_id" jdbcType="INTEGER" property="medicineId" />
    <result column="whse_id" jdbcType="INTEGER" property="whseId" />
    <result column="stock_Amount" jdbcType="INTEGER" property="stockAmount" />
  </resultMap>

  <resultMap id="StockBo" type="com.medicalSaleManagementSystem.core.model.BO.StockBo">
    <id column="stock_id" jdbcType="INTEGER" property="stockId" />
    <result column="medicine_id" jdbcType="INTEGER" property="medicineId"/>
    <result column="whse_id" jdbcType="INTEGER" property="whseId"/>
    <result column="stock_Amount" jdbcType="INTEGER" property="stockAmount"/>
    <result column="whse_Name" jdbcType="VARCHAR" property="whseName"/>
    <result column="whse_Address" jdbcType="VARCHAR" property="whseAddress"/>
    <result column="user_Number" jdbcType="VARCHAR" property="userNumber"/>
    <result column="medicine_Name" jdbcType="VARCHAR" property="medicineName"/>
    <result column="medicine_Category" jdbcType="VARCHAR" property="medicineCategory"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stock_id, medicine_id, whse_id, stock_Amount
  </sql>
  <select id="selectByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.StockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_stock
    where stock_id = #{stockId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_stock
    where stock_id = #{stockId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.StockExample">
    delete from tb_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!--<insert id="insert" parameterType="com.medicalSaleManagementSystem.core.model.entity.Stock">
    insert into tb_stock (stock_id, medicine_id, whse_id, 
      stock_Amount)
    values (#{stockId,jdbcType=INTEGER}, #{medicineId,jdbcType=INTEGER}, #{whseId,jdbcType=INTEGER}, 
      #{stockAmount,jdbcType=INTEGER})
  </insert>-->
  <insert id="insertSelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.Stock">
    insert into tb_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="medicineId != null">
        medicine_id,
      </if>
      <if test="whseId != null">
        whse_id,
      </if>
      <if test="stockAmount != null">
        stock_Amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockId != null">
        #{stockId,jdbcType=INTEGER},
      </if>
      <if test="medicineId != null">
        #{medicineId,jdbcType=INTEGER},
      </if>
      <if test="whseId != null">
        #{whseId,jdbcType=INTEGER},
      </if>
      <if test="stockAmount != null">
        #{stockAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.StockExample" resultType="java.lang.Long">
    select count(*) from tb_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_stock
    <set>
      <if test="record.stockId != null">
        stock_id = #{record.stockId,jdbcType=INTEGER},
      </if>
      <if test="record.medicineId != null">
        medicine_id = #{record.medicineId,jdbcType=INTEGER},
      </if>
      <if test="record.whseId != null">
        whse_id = #{record.whseId,jdbcType=INTEGER},
      </if>
      <if test="record.stockAmount != null">
        stock_Amount = #{record.stockAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_stock
    set stock_id = #{record.stockId,jdbcType=INTEGER},
      medicine_id = #{record.medicineId,jdbcType=INTEGER},
      whse_id = #{record.whseId,jdbcType=INTEGER},
      stock_Amount = #{record.stockAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.Stock">
    update tb_stock
    <set>
      <if test="medicineId != null">
        medicine_id = #{medicineId,jdbcType=INTEGER},
      </if>
      <if test="whseId != null">
        whse_id = #{whseId,jdbcType=INTEGER},
      </if>
      <if test="stockAmount != null">
        stock_Amount = #{stockAmount,jdbcType=INTEGER},
      </if>
    </set>
    where stock_id = #{stockId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medicalSaleManagementSystem.core.model.entity.Stock">
    update tb_stock
    set medicine_id = #{medicineId,jdbcType=INTEGER},
      whse_id = #{whseId,jdbcType=INTEGER},
      stock_Amount = #{stockAmount,jdbcType=INTEGER}
    where stock_id = #{stockId,jdbcType=INTEGER}
  </update>


  <select id="selectAllAndWhseId" resultType="com.medicalSaleManagementSystem.core.model.BO.StockBo"  parameterType="java.lang.Integer">
    select
      w.whse_Address as whseAddress,
      w.whse_id as whseId,
      s.stock_Amount as stockAmount,
      m.medicine_id as medicineId,
      m.medicine_Name as medicineName,
      m.medicine_Category as medicineCatagory
    from
    tb_stock s,tb_warehouse w, tb_medicine m
    where
    s.medicine_id = m.medicine_id
    and
    s.whse_id = w.whse_id
    <if test="whseId != null">
      and w.whse_id = #{whseId,jdbcType=INTEGER}
    </if>
  </select>

  <select id="selectByMedicineIdAndWhseId" resultMap="StockBo">
    SELECT
    tb_warehouse.whse_id,
    tb_stock.stock_Amount,
    tb_medicine.medicine_id,
    tb_medicine.medicine_Name,
    tb_medicine.medicine_Category
    FROM
    tb_stock
    INNER JOIN tb_warehouse ON tb_stock.whse_id = tb_warehouse.whse_id
    INNER JOIN tb_medicine ON tb_medicine.stock_id = tb_stock.stock_id AND tb_stock.medicine_id = tb_medicine.medicine_id
    WHERE
    tb_stock.medicine_id = tb_medicine.medicine_id AND
    tb_stock.whse_id = tb_warehouse.whse_id AND
    tb_medicine.medicine_id= #{medicineId}
    <if test="whseId != null">
      and w.whse_id = #{whseId}
    </if>
  </select>

  <select id="selectByMedicineNameAndWhseId" resultMap="StockBo">
    SELECT
    tb_warehouse.whse_id,
    tb_stock.stock_Amount,
    tb_medicine.medicine_id,
    tb_medicine.medicine_Name,
    tb_medicine.medicine_Category
    FROM
    tb_stock,tb_stock,tb_medicine,tb_warehouse
    WHERE
    tb_stock.medicine_id = tb_medicine.medicine_id AND
    tb_stock.whse_id = tb_warehouse.whse_id AND
    tb_medicine.medicine_Name like concat("%",concat(#{medicineName},"%"))
    <if test="whseId != null">
      and tb_warehouse.whse_id = #{whseId}
    </if>
  </select>

  <select id="selectByMedicineCategoryAndWhseId" resultMap="StockBo">
    SELECT
    tb_warehouse.whse_id,
    tb_stock.stock_Amount,
    tb_medicine.medicine_id,
    tb_medicine.medicine_Name,
    tb_medicine.medicine_Category
    FROM
    tb_stock,tb_stock,tb_medicine,tb_warehouse
    WHERE
    tb_stock.medicine_id = tb_medicine.medicine_id AND
    tb_stock.whse_id = tb_warehouse.whse_id AND
    tb_medicine.medicine_Category like concat("%",concat(#{medicineCategory},"%"))
    <if test="whseId != null">
      and tb_warehouse.whse_id = #{whseId}
    </if>
  </select>

  <update id="update" parameterType="com.medicalSaleManagementSystem.core.model.entity.Stock">
		update
			tb_stock
		set
			medicine_id = #{medicineId},
			whse_id = #{whseId},
			stock_Amount = #{stockAmount}
		where
			medicine_id = #{medicineId} and
			whse_id = #{whseId}
	</update>

  <insert id="insert" parameterType="com.medicalSaleManagementSystem.core.model.entity.Stock">
		insert into tb_stock
		(
			medicine_id,
			whse_id,
			stock_Amount
		)
		values
		(
			#{medicineId},
			#{whseId},
			#{stockAmount}
		)
	</insert>

  <!--<insert id="insertBatch">
    insert into tb_stock(medicine_id,whse_id,stock_Amount)
    values
    <foreach collection="list" item="BaseResultMap" separator=",">
      (
      #{stock.medicineId},#{stock.whseId},#{stock.stockAmount})
    </foreach>
  </insert>-->

  <delete id="deleteByMedicineId" parameterType="java.lang.Integer">
		delete from
			tb_stock
		where
			medicine_id = #{medicineId}
	</delete>

  <delete id="deleteByWhseId" parameterType="java.lang.Integer">
		delete from
			tb_stock
		where
			tb_stock.whse_id = #{whseId}
	</delete>

  <delete id="deleteByWhseIdAndMedicineId" parameterType="java.lang.Integer">
		delete from
			tb_stock
		where
			medicine_id = #{medicineId} and
			tb_stock.whse_id = #{whseId}
	</delete>
</mapper>