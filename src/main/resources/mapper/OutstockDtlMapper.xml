<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.medicalSaleManagementSystem.core.dao.OutstockDtlMapper">
    <resultMap id="BaseResultMap" type="com.medicalSaleManagementSystem.core.model.entity.OutstockDtl">
        <id column="outstock_Dtl_id" jdbcType="INTEGER" property="outstockDtlId" />
        <result column="outstock_Dtl_Number" jdbcType="VARCHAR" property="outstockDtlNumber" />
        <result column="medicine_id" jdbcType="INTEGER" property="medicineId" />
        <result column="outstock_Amount" jdbcType="INTEGER" property="outstockAmount" />
        <result column="whse_id" jdbcType="INTEGER" property="whseId" />
        <result column="outstock_Number" jdbcType="VARCHAR" property="outstockNumber" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    outstock_Dtl_id, outstock_Dtl_Number, medicine_id, outstock_Amount, whse_id, outstock_Number
  </sql>
    <select id="selectByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockDtlExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_outstock_dtl
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_outstock_dtl
        where outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_outstock_dtl
    where outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockDtlExample">
        delete from tb_outstock_dtl
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockDtl">
    insert into tb_outstock_dtl (outstock_Dtl_id, outstock_Dtl_Number,
      medicine_id, outstock_Amount, whse_id,
      outstock_Number)
    values (#{outstockDtlId,jdbcType=INTEGER}, #{outstockDtlNumber,jdbcType=VARCHAR},
      #{medicineId,jdbcType=INTEGER}, #{outstockAmount,jdbcType=INTEGER}, #{whseId,jdbcType=INTEGER},
      #{outstockNumber,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockDtl">
        insert into tb_outstock_dtl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outstockDtlId != null">
                outstock_Dtl_id,
            </if>
            <if test="outstockDtlNumber != null">
                outstock_Dtl_Number,
            </if>
            <if test="medicineId != null">
                medicine_id,
            </if>
            <if test="outstockAmount != null">
                outstock_Amount,
            </if>
            <if test="whseId != null">
                whse_id,
            </if>
            <if test="outstockNumber != null">
                outstock_Number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outstockDtlId != null">
                #{outstockDtlId,jdbcType=INTEGER},
            </if>
            <if test="outstockDtlNumber != null">
                #{outstockDtlNumber,jdbcType=VARCHAR},
            </if>
            <if test="medicineId != null">
                #{medicineId,jdbcType=INTEGER},
            </if>
            <if test="outstockAmount != null">
                #{outstockAmount,jdbcType=INTEGER},
            </if>
            <if test="whseId != null">
                #{whseId,jdbcType=INTEGER},
            </if>
            <if test="outstockNumber != null">
                #{outstockNumber,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockDtlExample" resultType="java.lang.Long">
        select count(*) from tb_outstock_dtl
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_outstock_dtl
        <set>
            <if test="record.outstockDtlId != null">
                outstock_Dtl_id = #{record.outstockDtlId,jdbcType=INTEGER},
            </if>
            <if test="record.outstockDtlNumber != null">
                outstock_Dtl_Number = #{record.outstockDtlNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.medicineId != null">
                medicine_id = #{record.medicineId,jdbcType=INTEGER},
            </if>
            <if test="record.outstockAmount != null">
                outstock_Amount = #{record.outstockAmount,jdbcType=INTEGER},
            </if>
            <if test="record.whseId != null">
                whse_id = #{record.whseId,jdbcType=INTEGER},
            </if>
            <if test="record.outstockNumber != null">
                outstock_Number = #{record.outstockNumber,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_outstock_dtl
        set outstock_Dtl_id = #{record.outstockDtlId,jdbcType=INTEGER},
        outstock_Dtl_Number = #{record.outstockDtlNumber,jdbcType=VARCHAR},
        medicine_id = #{record.medicineId,jdbcType=INTEGER},
        outstock_Amount = #{record.outstockAmount,jdbcType=INTEGER},
        whse_id = #{record.whseId,jdbcType=INTEGER},
        outstock_Number = #{record.outstockNumber,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockDtl">
        update tb_outstock_dtl
        <set>
            <if test="outstockDtlNumber != null">
                outstock_Dtl_Number = #{outstockDtlNumber,jdbcType=VARCHAR},
            </if>
            <if test="medicineId != null">
                medicine_id = #{medicineId,jdbcType=INTEGER},
            </if>
            <if test="outstockAmount != null">
                outstock_Amount = #{outstockAmount,jdbcType=INTEGER},
            </if>
            <if test="whseId != null">
                whse_id = #{whseId,jdbcType=INTEGER},
            </if>
            <if test="outstockNumber != null">
                outstock_Number = #{outstockNumber,jdbcType=VARCHAR},
            </if>
        </set>
        where outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockDtl">
    update tb_outstock_dtl
    set outstock_Dtl_Number = #{outstockDtlNumber,jdbcType=VARCHAR},
      medicine_id = #{medicineId,jdbcType=INTEGER},
      outstock_Amount = #{outstockAmount,jdbcType=INTEGER},
      whse_id = #{whseId,jdbcType=INTEGER},
      outstock_Number = #{outstockNumber,jdbcType=VARCHAR}
    where outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER}
  </update>
</mapper>