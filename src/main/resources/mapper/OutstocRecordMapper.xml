<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.medicalSaleManagementSystem.core.dao.OutstocRecordMapper">
  <resultMap id="BaseResultMap" type="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    <id column="outstock_id" jdbcType="INTEGER" property="outstockId" />
    <result column="outstock_List_Id" jdbcType="VARCHAR" property="outstockListId" />
    <result column="outstock_Category" jdbcType="VARCHAR" property="outstockCategory" />
    <result column="outstock_Date" jdbcType="TIMESTAMP" property="outstockDate" />
    <result column="medincine_id" jdbcType="INTEGER" property="medincineId" />
    <result column="outstock_Number" jdbcType="INTEGER" property="outstockNumber" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="outstock_Remark" jdbcType="VARCHAR" property="outstockRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    outstock_id, outstock_List_Id, outstock_Category, outstock_Date, medincine_id, outstock_Number, 
    emp_id, outstock_Remark
  </sql>
  <select id="selectByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_outstock_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_outstock_record
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_outstock_record
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecordExample">
    delete from tb_outstock_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    insert into tb_outstock_record (outstock_id, outstock_List_Id, outstock_Category, 
      outstock_Date, medincine_id, outstock_Number, 
      emp_id, outstock_Remark)
    values (#{outstockId,jdbcType=INTEGER}, #{outstockListId,jdbcType=VARCHAR}, #{outstockCategory,jdbcType=VARCHAR}, 
      #{outstockDate,jdbcType=TIMESTAMP}, #{medincineId,jdbcType=INTEGER}, #{outstockNumber,jdbcType=INTEGER}, 
      #{empId,jdbcType=INTEGER}, #{outstockRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    insert into tb_outstock_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outstockId != null">
        outstock_id,
      </if>
      <if test="outstockListId != null">
        outstock_List_Id,
      </if>
      <if test="outstockCategory != null">
        outstock_Category,
      </if>
      <if test="outstockDate != null">
        outstock_Date,
      </if>
      <if test="medincineId != null">
        medincine_id,
      </if>
      <if test="outstockNumber != null">
        outstock_Number,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="outstockRemark != null">
        outstock_Remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outstockId != null">
        #{outstockId,jdbcType=INTEGER},
      </if>
      <if test="outstockListId != null">
        #{outstockListId,jdbcType=VARCHAR},
      </if>
      <if test="outstockCategory != null">
        #{outstockCategory,jdbcType=VARCHAR},
      </if>
      <if test="outstockDate != null">
        #{outstockDate,jdbcType=TIMESTAMP},
      </if>
      <if test="medincineId != null">
        #{medincineId,jdbcType=INTEGER},
      </if>
      <if test="outstockNumber != null">
        #{outstockNumber,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="outstockRemark != null">
        #{outstockRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecordExample" resultType="java.lang.Long">
    select count(*) from tb_outstock_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_outstock_record
    <set>
      <if test="record.outstockId != null">
        outstock_id = #{record.outstockId,jdbcType=INTEGER},
      </if>
      <if test="record.outstockListId != null">
        outstock_List_Id = #{record.outstockListId,jdbcType=VARCHAR},
      </if>
      <if test="record.outstockCategory != null">
        outstock_Category = #{record.outstockCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.outstockDate != null">
        outstock_Date = #{record.outstockDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.medincineId != null">
        medincine_id = #{record.medincineId,jdbcType=INTEGER},
      </if>
      <if test="record.outstockNumber != null">
        outstock_Number = #{record.outstockNumber,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.outstockRemark != null">
        outstock_Remark = #{record.outstockRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_outstock_record
    set outstock_id = #{record.outstockId,jdbcType=INTEGER},
      outstock_List_Id = #{record.outstockListId,jdbcType=VARCHAR},
      outstock_Category = #{record.outstockCategory,jdbcType=VARCHAR},
      outstock_Date = #{record.outstockDate,jdbcType=TIMESTAMP},
      medincine_id = #{record.medincineId,jdbcType=INTEGER},
      outstock_Number = #{record.outstockNumber,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      outstock_Remark = #{record.outstockRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    update tb_outstock_record
    <set>
      <if test="outstockListId != null">
        outstock_List_Id = #{outstockListId,jdbcType=VARCHAR},
      </if>
      <if test="outstockCategory != null">
        outstock_Category = #{outstockCategory,jdbcType=VARCHAR},
      </if>
      <if test="outstockDate != null">
        outstock_Date = #{outstockDate,jdbcType=TIMESTAMP},
      </if>
      <if test="medincineId != null">
        medincine_id = #{medincineId,jdbcType=INTEGER},
      </if>
      <if test="outstockNumber != null">
        outstock_Number = #{outstockNumber,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="outstockRemark != null">
        outstock_Remark = #{outstockRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    update tb_outstock_record
    set outstock_List_Id = #{outstockListId,jdbcType=VARCHAR},
      outstock_Category = #{outstockCategory,jdbcType=VARCHAR},
      outstock_Date = #{outstockDate,jdbcType=TIMESTAMP},
      medincine_id = #{medincineId,jdbcType=INTEGER},
      outstock_Number = #{outstockNumber,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=INTEGER},
      outstock_Remark = #{outstockRemark,jdbcType=VARCHAR}
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    <id column="outstock_id" jdbcType="INTEGER" property="outstockId" />
    <result column="outstock_Number" jdbcType="VARCHAR" property="outstockNumber" />
    <result column="outstock_Category" jdbcType="VARCHAR" property="outstockCategory" />
    <result column="outstock_Time" jdbcType="TIMESTAMP" property="outstockTime" />
    <result column="user_Number" jdbcType="VARCHAR" property="userNumber" />
    <result column="outstock_Remark" jdbcType="VARCHAR" property="outstockRemark" />
    <result column="outstock_Dtl_id" jdbcType="INTEGER" property="outstockDtlId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    outstock_id, outstock_Number, outstock_Category, outstock_Time, user_Number, outstock_Remark, 
    outstock_Dtl_id
  </sql>
  <select id="selectByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_outstock_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_outstock_record
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_outstock_record
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecordExample">
    delete from tb_outstock_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    insert into tb_outstock_record (outstock_id, outstock_Number, outstock_Category, 
      outstock_Time, user_Number, outstock_Remark, 
      outstock_Dtl_id)
    values (#{outstockId,jdbcType=INTEGER}, #{outstockNumber,jdbcType=VARCHAR}, #{outstockCategory,jdbcType=VARCHAR}, 
      #{outstockTime,jdbcType=TIMESTAMP}, #{userNumber,jdbcType=VARCHAR}, #{outstockRemark,jdbcType=VARCHAR}, 
      #{outstockDtlId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    insert into tb_outstock_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outstockId != null">
        outstock_id,
      </if>
      <if test="outstockNumber != null">
        outstock_Number,
      </if>
      <if test="outstockCategory != null">
        outstock_Category,
      </if>
      <if test="outstockTime != null">
        outstock_Time,
      </if>
      <if test="userNumber != null">
        user_Number,
      </if>
      <if test="outstockRemark != null">
        outstock_Remark,
      </if>
      <if test="outstockDtlId != null">
        outstock_Dtl_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outstockId != null">
        #{outstockId,jdbcType=INTEGER},
      </if>
      <if test="outstockNumber != null">
        #{outstockNumber,jdbcType=VARCHAR},
      </if>
      <if test="outstockCategory != null">
        #{outstockCategory,jdbcType=VARCHAR},
      </if>
      <if test="outstockTime != null">
        #{outstockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userNumber != null">
        #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="outstockRemark != null">
        #{outstockRemark,jdbcType=VARCHAR},
      </if>
      <if test="outstockDtlId != null">
        #{outstockDtlId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecordExample" resultType="java.lang.Long">
    select count(*) from tb_outstock_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_outstock_record
    <set>
      <if test="record.outstockId != null">
        outstock_id = #{record.outstockId,jdbcType=INTEGER},
      </if>
      <if test="record.outstockNumber != null">
        outstock_Number = #{record.outstockNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.outstockCategory != null">
        outstock_Category = #{record.outstockCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.outstockTime != null">
        outstock_Time = #{record.outstockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userNumber != null">
        user_Number = #{record.userNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.outstockRemark != null">
        outstock_Remark = #{record.outstockRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.outstockDtlId != null">
        outstock_Dtl_id = #{record.outstockDtlId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_outstock_record
    set outstock_id = #{record.outstockId,jdbcType=INTEGER},
      outstock_Number = #{record.outstockNumber,jdbcType=VARCHAR},
      outstock_Category = #{record.outstockCategory,jdbcType=VARCHAR},
      outstock_Time = #{record.outstockTime,jdbcType=TIMESTAMP},
      user_Number = #{record.userNumber,jdbcType=VARCHAR},
      outstock_Remark = #{record.outstockRemark,jdbcType=VARCHAR},
      outstock_Dtl_id = #{record.outstockDtlId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    update tb_outstock_record
    <set>
      <if test="outstockNumber != null">
        outstock_Number = #{outstockNumber,jdbcType=VARCHAR},
      </if>
      <if test="outstockCategory != null">
        outstock_Category = #{outstockCategory,jdbcType=VARCHAR},
      </if>
      <if test="outstockTime != null">
        outstock_Time = #{outstockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userNumber != null">
        user_Number = #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="outstockRemark != null">
        outstock_Remark = #{outstockRemark,jdbcType=VARCHAR},
      </if>
      <if test="outstockDtlId != null">
        outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER},
      </if>
    </set>
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstocRecord">
    update tb_outstock_record
    set outstock_Number = #{outstockNumber,jdbcType=VARCHAR},
      outstock_Category = #{outstockCategory,jdbcType=VARCHAR},
      outstock_Time = #{outstockTime,jdbcType=TIMESTAMP},
      user_Number = #{userNumber,jdbcType=VARCHAR},
      outstock_Remark = #{outstockRemark,jdbcType=VARCHAR},
      outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER}
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </update>
</mapper>