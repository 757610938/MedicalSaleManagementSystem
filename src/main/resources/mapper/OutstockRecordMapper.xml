<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.medicalSaleManagementSystem.core.dao.OutstockRecordMapper">
    <resultMap id="BaseResultMap" type="com.medicalSaleManagementSystem.core.model.entity.OutstockRecord">
        <id column="outstock_id" jdbcType="INTEGER" property="outstockId"/>
        <result column="outstock_Number" jdbcType="VARCHAR" property="outstockNumber"/>
        <result column="outstock_Category" jdbcType="VARCHAR" property="outstockCategory"/>
        <result column="outstock_Time" jdbcType="TIMESTAMP" property="outstockTime"/>
        <result column="user_Number" jdbcType="VARCHAR" property="userNumber"/>
        <result column="outstock_Remark" jdbcType="VARCHAR" property="outstockRemark"/>
        <result column="outstock_Dtl_id" jdbcType="INTEGER" property="outstockDtlId"/>
    </resultMap>
    <resultMap id="outstockAndDtl" type="com.medicalSaleManagementSystem.core.model.BO.OutstockBO">
        <id column="outstock_id" jdbcType="INTEGER" property="outstockId"/>
        <result column="outstock_Number" jdbcType="VARCHAR" property="outstockNumber"/>
        <result column="outstock_Category" jdbcType="VARCHAR" property="outstockCategory"/>
        <result column="outstock_Time" jdbcType="TIMESTAMP" property="outstockTime"/>
        <result column="user_Number" jdbcType="VARCHAR" property="userNumber"/>
        <result column="outstock_Remark" jdbcType="VARCHAR" property="outstockRemark"/>
        <result column="outstock_Dtl_Id" jdbcType="INTEGER" property="outstockDtlId"/>
        <collection property="outstockDtlBOList" ofType="com.medicalSaleManagementSystem.core.model.BO.OutstockDtlBO">
            <id column="outstock_Dtl_id" jdbcType="INTEGER" property="outstockDtlId"/>
            <result column="outstock_Dtl_Number" jdbcType="VARCHAR" property="outstockDtlNumber"/>
            <result column="medicine_id" jdbcType="INTEGER" property="medicineId"/>
            <result column="outstock_Amount" jdbcType="INTEGER" property="outstockAmount"/>
            <result column="whse_id" jdbcType="INTEGER" property="whseId"/>
            <result column="outstock_Number" jdbcType="VARCHAR" property="outstockNumber"/>
        </collection>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    outstock_id, outstock_Number, outstock_Category, outstock_Time, user_Number, outstock_Remark,
    outstock_Dtl_id
  </sql>
    <select id="selectByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockRecordExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_outstock_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_outstock_record
        where outstock_id = #{outstockId,jdbcType=INTEGER}
    </select>

    <!--通过出库单号查询出库单及其出库单项-->
    <select id="selectOutstockAndDtlByOutstockNumber" parameterType="java.lang.String" resultMap="outstockAndDtl">
        SELECT
            tb_outstock_record.outstock_id,
            tb_outstock_record.outstock_Number,
            tb_outstock_record.outstock_Category,
            tb_outstock_record.outstock_Time,
            tb_outstock_record.user_Number,
            tb_outstock_record.outstock_Remark,
            tb_outstock_record.outstock_Dtl_id,
            tb_outstock_dtl.outstock_Dtl_id,
            tb_outstock_dtl.outstock_Dtl_Number,
            tb_outstock_dtl.medicine_id,
            tb_outstock_dtl.outstock_Amount,
            tb_outstock_dtl.whse_id
        FROM
            tb_outstock_record
        INNER JOIN tb_outstock_dtl ON tb_outstock_record.outstock_Number = tb_outstock_dtl.outstock_Number
        WHERE
            tb_outstock_record.outstock_Number=#{outstock_Number,jdbcType=VARCHAR}
    </select>

    <!--通过出库单号查询出库单-->
    <select id="selectOutstockByOutstockNumber" parameterType="java.lang.String" resultMap="outstockAndDtl">
        SELECT
            tb_outstock_record.outstock_id,
            tb_outstock_record.outstock_Number,
            tb_outstock_record.outstock_Category,
            tb_outstock_record.outstock_Time,
            tb_outstock_record.user_Number,
            tb_outstock_record.outstock_Remark,
            tb_outstock_record.outstock_Dtl_id
        FROM
            tb_outstock_record
        WHERE
            tb_outstock_record.outstock_Number=#{outstock_Number,jdbcType=VARCHAR}
    </select>

    <!--查询所有的出库单及其出库单项记录-->
    <select id="selectAllOutstockAndDtl" resultMap="outstockAndDtl">
        SELECT
            tb_outstock_record.outstock_id,
            tb_outstock_record.outstock_Number,
            tb_outstock_record.outstock_Category,
            tb_outstock_record.outstock_Time,
            tb_outstock_record.user_Number,
            tb_outstock_record.outstock_Remark,
            tb_outstock_record.outstock_Dtl_id,
            tb_outstock_dtl.outstock_Dtl_id,
            tb_outstock_dtl.outstock_Dtl_Number,
            tb_outstock_dtl.medicine_id,
            tb_outstock_dtl.outstock_Amount,
            tb_outstock_dtl.whse_id
        FROM
            tb_outstock_record
        INNER JOIN tb_outstock_dtl ON tb_outstock_record.outstock_Number = tb_outstock_dtl.outstock_Number
    </select>

    <!--查询所有出库单记录-->
    <select id="selectAllOutstock" resultMap="BaseResultMap">
        SELECT
            tb_outstock_record.outstock_id,
            tb_outstock_record.outstock_Number,
            tb_outstock_record.outstock_Category,
            tb_outstock_record.outstock_Time,
            tb_outstock_record.user_Number,
            tb_outstock_record.outstock_Remark,
            tb_outstock_record.outstock_Dtl_id
        FROM
            tb_outstock_record
    </select>

    <!--模糊查询出库单-->
    <select id="selectByFuzzySearch" parameterType="java.lang.String" resultMap="outstockAndDtl">
        SELECT
            *
        FROM
            tb_outstock_record
        where
            outstock_Time like #{outstockTime,jdbcType=TIMESTAMP}
        or
            outstock_Category like #{outstockCategory,jdbcType=VARCHAR}
        or
            outstock_Number like #{outstockNumber,jdbcType=VARCHAR}
    </select>

    <select id="selectAllOutstockNumber" resultType="java.lang.String">
        SELECT
            outstock_Number
        FROM
            tb_outstock_record
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_outstock_record
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample"
            parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockRecordExample">
        delete from tb_outstock_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockRecord">
    insert into tb_outstock_record (outstock_id, outstock_Number, outstock_Category,
      outstock_Time, user_Number, outstock_Remark,
      outstock_Dtl_id)
    values (#{outstockId,jdbcType=INTEGER}, #{outstockNumber,jdbcType=VARCHAR}, #{outstockCategory,jdbcType=VARCHAR},
      #{outstockTime,jdbcType=TIMESTAMP}, #{userNumber,jdbcType=VARCHAR}, #{outstockRemark,jdbcType=VARCHAR},
      #{outstockDtlId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockRecord">
        insert into tb_outstock_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outstockId != null">
                outstock_id,
            </if>
            <if test="outstockNumber != null">
                outstock_Number,
            </if>
            <if test="outstockCategory != null">
                outstock_Category,
            </if>
            <if test="outstockTime != null">
                outstock_Time,
            </if>
            <if test="userNumber != null">
                user_Number,
            </if>
            <if test="outstockRemark != null">
                outstock_Remark,
            </if>
            <if test="outstockDtlId != null">
                outstock_Dtl_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outstockId != null">
                #{outstockId,jdbcType=INTEGER},
            </if>
            <if test="outstockNumber != null">
                #{outstockNumber,jdbcType=VARCHAR},
            </if>
            <if test="outstockCategory != null">
                #{outstockCategory,jdbcType=VARCHAR},
            </if>
            <if test="outstockTime != null">
                #{outstockTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userNumber != null">
                #{userNumber,jdbcType=VARCHAR},
            </if>
            <if test="outstockRemark != null">
                #{outstockRemark,jdbcType=VARCHAR},
            </if>
            <if test="outstockDtlId != null">
                #{outstockDtlId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockRecordExample"
            resultType="java.lang.Long">
        select count(*) from tb_outstock_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_outstock_record
        <set>
            <if test="record.outstockId != null">
                outstock_id = #{record.outstockId,jdbcType=INTEGER},
            </if>
            <if test="record.outstockNumber != null">
                outstock_Number = #{record.outstockNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.outstockCategory != null">
                outstock_Category = #{record.outstockCategory,jdbcType=VARCHAR},
            </if>
            <if test="record.outstockTime != null">
                outstock_Time = #{record.outstockTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userNumber != null">
                user_Number = #{record.userNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.outstockRemark != null">
                outstock_Remark = #{record.outstockRemark,jdbcType=VARCHAR},
            </if>
            <if test="record.outstockDtlId != null">
                outstock_Dtl_id = #{record.outstockDtlId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_outstock_record
        set outstock_id = #{record.outstockId,jdbcType=INTEGER},
        outstock_Number = #{record.outstockNumber,jdbcType=VARCHAR},
        outstock_Category = #{record.outstockCategory,jdbcType=VARCHAR},
        outstock_Time = #{record.outstockTime,jdbcType=TIMESTAMP},
        user_Number = #{record.userNumber,jdbcType=VARCHAR},
        outstock_Remark = #{record.outstockRemark,jdbcType=VARCHAR},
        outstock_Dtl_id = #{record.outstockDtlId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockRecord">
        update tb_outstock_record
        <set>
            <if test="outstockNumber != null">
                outstock_Number = #{outstockNumber,jdbcType=VARCHAR},
            </if>
            <if test="outstockCategory != null">
                outstock_Category = #{outstockCategory,jdbcType=VARCHAR},
            </if>
            <if test="outstockTime != null">
                outstock_Time = #{outstockTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userNumber != null">
                user_Number = #{userNumber,jdbcType=VARCHAR},
            </if>
            <if test="outstockRemark != null">
                outstock_Remark = #{outstockRemark,jdbcType=VARCHAR},
            </if>
            <if test="outstockDtlId != null">
                outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER},
            </if>
        </set>
        where outstock_id = #{outstockId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.medicalSaleManagementSystem.core.model.entity.OutstockRecord">
    update tb_outstock_record
    set outstock_Number = #{outstockNumber,jdbcType=VARCHAR},
      outstock_Category = #{outstockCategory,jdbcType=VARCHAR},
      outstock_Time = #{outstockTime,jdbcType=TIMESTAMP},
      user_Number = #{userNumber,jdbcType=VARCHAR},
      outstock_Remark = #{outstockRemark,jdbcType=VARCHAR},
      outstock_Dtl_id = #{outstockDtlId,jdbcType=INTEGER}
    where outstock_id = #{outstockId,jdbcType=INTEGER}
  </update>
</mapper>