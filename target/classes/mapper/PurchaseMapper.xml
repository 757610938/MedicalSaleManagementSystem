<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.medicalSaleManagementSystem.core.dao.PurchaseMapper">
    <resultMap id="BaseResultMap" type="com.medicalSaleManagementSystem.core.model.entity.Purchase">
        <id column="pur_id" jdbcType="INTEGER" property="purId" />
        <result column="pur_Order_Id" jdbcType="VARCHAR" property="purOrderId" />
        <result column="pur__Name" jdbcType="VARCHAR" property="purName" />
        <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
        <result column="user_Number" jdbcType="VARCHAR" property="userNumber" />
        <result column="pur_Total_Money" jdbcType="DOUBLE" property="purTotalMoney" />
        <result column="pur_Status" jdbcType="VARCHAR" property="purStatus" />
        <result column="Warehouse_id" jdbcType="INTEGER" property="warehouseId" />
        <result column="pur_Date" jdbcType="TIMESTAMP" property="purDate" />
        <result column="pur__Remark" jdbcType="VARCHAR" property="purRemark" />
    </resultMap>
    <resultMap id="purchaseAndDtl" type="com.medicalSaleManagementSystem.core.model.BO.PurchaseBO">
        <id column="pur_id" jdbcType="INTEGER" property="purId" />
        <result column="pur_Order_Id" jdbcType="VARCHAR" property="purOrderId" />
        <result column="pur__Name" jdbcType="VARCHAR" property="purName" />
        <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
        <result column="user_Number" jdbcType="VARCHAR" property="userNumber" />
        <result column="pur_Total_Money" jdbcType="DOUBLE" property="purTotalMoney" />
        <result column="pur_Status" jdbcType="VARCHAR" property="purStatus" />
        <result column="Warehouse_id" jdbcType="INTEGER" property="warehouseId" />
        <result column="pur_Date" jdbcType="TIMESTAMP" property="purDate" />
        <result column="pur__Remark" jdbcType="VARCHAR" property="purRemark" />
        <collection property="purDtlList" ofType="com.medicalSaleManagementSystem.core.model.BO.PurchaseDtlBO">
            <id column="pur_Dtl_id" jdbcType="INTEGER" property="purDtlId" />
            <result column="pur_Dtl_Order_Id" jdbcType="VARCHAR" property="purDtlOrderId" />
            <result column="pur_Order_Id" jdbcType="VARCHAR" property="purOrderId" />
            <result column="medicine_id" jdbcType="INTEGER" property="medicineId" />
            <result column="medicine_Name" jdbcType="VARCHAR" property="medicineName" />
            <result column="pur_Dtl_Amount" jdbcType="INTEGER" property="purDtlAmount" />
            <result column="pur_Dtl_Price" jdbcType="DOUBLE" property="purDtlPrice" />
            <result column="pur_Dtl_Status" jdbcType="VARCHAR" property="purDtlStatus" />
            <result column="pur_Dtl_Remark" jdbcType="VARCHAR" property="purDtlRemark" />
        </collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    pur_id, pur_Order_Id, pur__Name, supplier_id, user_Number, pur_Total_Money, pur_Status,
    Warehouse_id, pur_Date, pur__Remark
  </sql>
    <select id="selectByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.PurchaseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_purchase
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_purchase
        where pur_id = #{purId,jdbcType=INTEGER}
    </select>
    <select id="selectPurAndDtlByPurOrderId" parameterType="java.lang.String" resultMap="purchaseAndDtl">
        SELECT
            tb_purchase.pur_id,
            tb_purchase.pur_Order_Id,
            tb_purchase.supplier_id,
            tb_purchase.user_Number,
            tb_purchase.pur_Total_Money,
            tb_purchase.pur_Status,
            tb_purchase.Warehouse_id,
            tb_purchase.pur__Name,
            tb_purchase_dtl.pur_Dtl_Status,
            tb_purchase_dtl.pur_Dtl_Price,
            tb_purchase_dtl.pur_Dtl_Amount,
            tb_purchase_dtl.medicine_Name,
            tb_purchase_dtl.medicine_id,
            tb_purchase_dtl.pur_Dtl_Order_Id,
            tb_purchase_dtl.pur_Dtl_id,
            tb_purchase_dtl.pur_Order_Id
        FROM
            tb_purchase
        INNER JOIN tb_purchase_dtl ON tb_purchase_dtl.pur_Order_Id = tb_purchase.pur_Order_Id
         where tb_purchase.pur_Order_Id = #{purOrderId,jdbcType=VARCHAR}
    </select>
    <select id="selectPurByPurOrderId" parameterType="java.lang.String" resultMap="purchaseAndDtl">
        SELECT
            pur_id,
            pur_Order_Id,
            supplier_id,
            user_Number,
            pur_Total_Money,
            pur_Status,
            Warehouse_id,
            pur__Name
        FROM
            tb_purchase
         where pur_Order_Id = #{purOrderId,jdbcType=VARCHAR}
    </select>
    <select id="getAllPurOrderId"  resultType="java.lang.Integer">
    SELECT
        pur_Order_Id
    FROM
        tb_purchase
    </select>
    <select id="getAllAndDtl"  resultMap="purchaseAndDtl">
       SELECT
        tb_purchase.pur_id,
        tb_purchase.pur_Order_Id,
        tb_purchase.pur__Name,
        tb_purchase.supplier_id,
        tb_purchase.user_Number,
        tb_purchase.pur_Total_Money,
        tb_purchase.pur_Status,
        tb_purchase.Warehouse_id,
        tb_purchase.pur_Date,
        tb_purchase.pur__Remark,
        tb_purchase_dtl.pur_Dtl_id,
        tb_purchase_dtl.pur_Dtl_Order_Id,
        tb_purchase_dtl.pur_Order_Id,
        tb_purchase_dtl.medicine_id,
        tb_purchase_dtl.medicine_Name,
        tb_purchase_dtl.pur_Dtl_Amount,
        tb_purchase_dtl.pur_Dtl_Price,
        tb_purchase_dtl.pur_Dtl_Status,
        tb_purchase_dtl.pur_Dtl_Remark
    FROM
        tb_purchase
    INNER JOIN tb_purchase_dtl ON tb_purchase_dtl.pur_Order_Id = tb_purchase.pur_Order_Id
    </select>
    <select id="getAll"  resultMap="BaseResultMap">
     SELECT
        tb_purchase.pur_id,
        tb_purchase.pur_Order_Id,
        tb_purchase.pur__Name,
        tb_purchase.supplier_id,
        tb_purchase.user_Number,
        tb_purchase.pur_Total_Money,
        tb_purchase.pur_Status,
        tb_purchase.Warehouse_id,
        tb_purchase.pur_Date,
        tb_purchase.pur__Remark
     FROM
        tb_purchase
    </select>
    <select id="getAllByUserNumber"  parameterType="java.lang.String" resultMap="purchaseAndDtl">
        SELECT
            *
        FROM
        tb_purchase
        where user_Number like #{userNumber,jdbcType=VARCHAR}
        or pur__Name like #{userNumber,jdbcType=VARCHAR}
        or pur_Order_Id like #{userNumber,jdbcType=VARCHAR}
        or pur_Status like #{userNumber,jdbcType=VARCHAR}
    </select>
    <select id="getAllByPurStatusAndKeyword"  parameterType="java.lang.String" resultMap="purchaseAndDtl">
        SELECT  *  FROM
	    (SELECT *  FROM tb_purchase
		where pur_Status = #{purStatus,jdbcType=VARCHAR}) AS table1
        where table1.pur__Name like #{Keyword,jdbcType=VARCHAR}
        or  table1.user_Number like #{Keyword,jdbcType=VARCHAR}
        or  table1.pur_Order_Id like #{Keyword,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_purchase
    where pur_id = #{purId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.PurchaseExample">
        delete from tb_purchase
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.medicalSaleManagementSystem.core.model.entity.Purchase">
    insert into tb_purchase (pur_id, pur_Order_Id, pur__Name,
      supplier_id, user_Number, pur_Total_Money,
      pur_Status, Warehouse_id, pur_Date,
      pur__Remark)
    values (#{purId,jdbcType=INTEGER}, #{purOrderId,jdbcType=VARCHAR}, #{purName,jdbcType=VARCHAR},
      #{supplierId,jdbcType=INTEGER}, #{userNumber,jdbcType=VARCHAR}, #{purTotalMoney,jdbcType=DOUBLE},
      #{purStatus,jdbcType=VARCHAR}, #{warehouseId,jdbcType=INTEGER}, #{purDate,jdbcType=TIMESTAMP},
      #{purRemark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.Purchase">
        insert into tb_purchase
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="purId != null">
                pur_id,
            </if>
            <if test="purOrderId != null">
                pur_Order_Id,
            </if>
            <if test="purName != null">
                pur__Name,
            </if>
            <if test="supplierId != null">
                supplier_id,
            </if>
            <if test="userNumber != null">
                user_Number,
            </if>
            <if test="purTotalMoney != null">
                pur_Total_Money,
            </if>
            <if test="purStatus != null">
                pur_Status,
            </if>
            <if test="warehouseId != null">
                Warehouse_id,
            </if>
            <if test="purDate != null">
                pur_Date,
            </if>
            <if test="purRemark != null">
                pur__Remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="purId != null">
                #{purId,jdbcType=INTEGER},
            </if>
            <if test="purOrderId != null">
                #{purOrderId,jdbcType=VARCHAR},
            </if>
            <if test="purName != null">
                #{purName,jdbcType=VARCHAR},
            </if>
            <if test="supplierId != null">
                #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="userNumber != null">
                #{userNumber,jdbcType=VARCHAR},
            </if>
            <if test="purTotalMoney != null">
                #{purTotalMoney,jdbcType=DOUBLE},
            </if>
            <if test="purStatus != null">
                #{purStatus,jdbcType=VARCHAR},
            </if>
            <if test="warehouseId != null">
                #{warehouseId,jdbcType=INTEGER},
            </if>
            <if test="purDate != null">
                #{purDate,jdbcType=TIMESTAMP},
            </if>
            <if test="purRemark != null">
                #{purRemark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.medicalSaleManagementSystem.core.model.entity.PurchaseExample" resultType="java.lang.Long">
        select count(*) from tb_purchase
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_purchase
        <set>
            <if test="record.purId != null">
                pur_id = #{record.purId,jdbcType=INTEGER},
            </if>
            <if test="record.purOrderId != null">
                pur_Order_Id = #{record.purOrderId,jdbcType=VARCHAR},
            </if>
            <if test="record.purName != null">
                pur__Name = #{record.purName,jdbcType=VARCHAR},
            </if>
            <if test="record.supplierId != null">
                supplier_id = #{record.supplierId,jdbcType=INTEGER},
            </if>
            <if test="record.userNumber != null">
                user_Number = #{record.userNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.purTotalMoney != null">
                pur_Total_Money = #{record.purTotalMoney,jdbcType=DOUBLE},
            </if>
            <if test="record.purStatus != null">
                pur_Status = #{record.purStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.warehouseId != null">
                Warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
            </if>
            <if test="record.purDate != null">
                pur_Date = #{record.purDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.purRemark != null">
                pur__Remark = #{record.purRemark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_purchase
        set pur_id = #{record.purId,jdbcType=INTEGER},
        pur_Order_Id = #{record.purOrderId,jdbcType=VARCHAR},
        pur__Name = #{record.purName,jdbcType=VARCHAR},
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
        user_Number = #{record.userNumber,jdbcType=VARCHAR},
        pur_Total_Money = #{record.purTotalMoney,jdbcType=DOUBLE},
        pur_Status = #{record.purStatus,jdbcType=VARCHAR},
        Warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
        pur_Date = #{record.purDate,jdbcType=TIMESTAMP},
        pur__Remark = #{record.purRemark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.medicalSaleManagementSystem.core.model.entity.Purchase">
        update tb_purchase
        <set>
            <if test="purOrderId != null">
                pur_Order_Id = #{purOrderId,jdbcType=VARCHAR},
            </if>
            <if test="purName != null">
                pur__Name = #{purName,jdbcType=VARCHAR},
            </if>
            <if test="supplierId != null">
                supplier_id = #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="userNumber != null">
                user_Number = #{userNumber,jdbcType=VARCHAR},
            </if>
            <if test="purTotalMoney != null">
                pur_Total_Money = #{purTotalMoney,jdbcType=DOUBLE},
            </if>
            <if test="purStatus != null">
                pur_Status = #{purStatus,jdbcType=VARCHAR},
            </if>
            <if test="warehouseId != null">
                Warehouse_id = #{warehouseId,jdbcType=INTEGER},
            </if>
            <if test="purDate != null">
                pur_Date = #{purDate,jdbcType=TIMESTAMP},
            </if>
            <if test="purRemark != null">
                pur__Remark = #{purRemark,jdbcType=VARCHAR},
            </if>
        </set>
        where pur_id = #{purId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.medicalSaleManagementSystem.core.model.entity.Purchase">
    update tb_purchase
    set pur_Order_Id = #{purOrderId,jdbcType=VARCHAR},
      pur__Name = #{purName,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      user_Number = #{userNumber,jdbcType=VARCHAR},
      pur_Total_Money = #{purTotalMoney,jdbcType=DOUBLE},
      pur_Status = #{purStatus,jdbcType=VARCHAR},
      Warehouse_id = #{warehouseId,jdbcType=INTEGER},
      pur_Date = #{purDate,jdbcType=TIMESTAMP},
      pur__Remark = #{purRemark,jdbcType=VARCHAR}
    where pur_id = #{purId,jdbcType=INTEGER}
  </update>
</mapper>